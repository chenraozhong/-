========================================================================
    控制台应用程序：银行家算法模拟 项目概述
========================================================================

应用程序向导已为您创建了此 银行家算法模拟 应用程序。

本文件概要介绍组成 银行家算法模拟 应用程序的每个文件的内容。


银行家算法模拟.vcxproj
    这是使用应用程序向导生成的 VC++ 项目的主项目文件，其中包含生成该文件的 Visual C++ 的版本信息，以及有关使用应用程序向导选择的平台、配置和项目功能的信息。

银行家算法模拟.vcxproj.filters
    这是使用“应用程序向导”生成的 VC++ 项目筛选器文件。它包含有关项目文件与筛选器之间的关联信息。在 IDE 中，通过这种关联，在特定节点下以分组形式显示具有相似扩展名的文件。例如，“.cpp”文件与“源文件”筛选器关联。

银行家算法模拟.cpp
    这是主应用程序源文件。

/////////////////////////////////////////////////////////////////////////////
其他标准文件:

StdAfx.h, StdAfx.cpp
    这些文件用于生成名为 银行家算法模拟.pch 的预编译头 (PCH) 文件和名为 StdAfx.obj 的预编译类型文件。

/////////////////////////////////////////////////////////////////////////////
其他注释:

应用程序向导使用“TODO:”注释来指示应添加或自定义的源代码部分。

/////////////////////////////////////////////////////////////////////////////

排序模块：
	思想：通过 vector<pair<string,int> > 来实现安全序列和加权数的链接，再通过<algorithm>里的sort()函数进行加权数的排序。
		输入：原始文本的内容
		输出：排序好的数据输出到文本中

	头文件：
	Safe_Sequence_Sort.h
		在其中定义了对加权数排序的类，类中包括三个公有成员变量和三个私有变量。
		对公有成员函数的解释：		
			void ReadOfSafeAndWeight();//读取安全序列和加权数
			void SortOfWeight();//加权数的排序
			void WriteOfSafeAndWeight();//将安全序列和排序后的加权数写入文档
		对私有变量的解释：
			vector<pair<string, int> > m_SafeAndWeight;//存储安全序列和加权数
			ifstream m_ReadSafeSequencetxt;//原始安全序列和加权数的读取
			ofstream m_WriteSafeSequence;//排序后的安全序列和加权数
	类的实现文件：
	Safe_Sequence_Sort.cpp
		在其中进行头文件 Safe_Sequence_Sort.h 内的类成员函数的实现，也定义了一个不属于类的成员函数。
		不属于类的函数：
			bool cmp(const pair<string, int>& a1, const pair<string, int>& a2);//对其中的数据按照降序排序


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////




			